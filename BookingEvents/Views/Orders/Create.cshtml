@model BookingEvents.Models.Order

@{
    ViewBag.Title = "Create";
    var message = TempData["AlertMessage"] ?? string.Empty;
}
<script>
            var msg = '@message';
            if (msg)
                alert(msg)
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Make A Booking</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TotalCost)
        @*@Html.HiddenFor(model => model.TotalCost)*@
        @Html.HiddenFor(model => model.venueId)

        @*<div class="form-group">
            @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, "Start Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="form-group" style="display:none">
                @Html.LabelFor(model => model.venueId, "venueId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="hidden" readonly value="@ViewBag.Id" class="form-control" name="venueId" />
                    @Html.ValidationMessageFor(model => model.venueId, "", new { @class = "text-danger" })
                </div>
            </div>*@


        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, "End Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.NumPeople, "Number of People", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumPeople, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumPeople, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.EventId, "Event Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EventId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EventId, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Continue" class="btn btn-success" />
            </div>
        </div>
    </div>
}



@*<script>
        $('#OrderDate').datetimepicker({
            format: 'MM/DD/YYYY HH:mm A',


        });
        $('#CollectDate').datetimepicker({
            format: 'MM/DD/YYYY HH:mm A',


        });
    </script>*@